name: Node.js CI/CD Pipeline

on:
  push:
    branches:
      - "master"
    paths:
      - "./src/web/*"
      - ".github/workflows/sck-web-app-*"

env:
  PROJECT_PATH: "src/web/"
  APACHE_HTACCESS_SCK_APP: "src/web/projects/sck-app/src/.htaccess"
  PROJECT_DIST_PATH: "src/web/dist/sck-app/"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      # ENV SUBSTITUTION
      - name: Environment substitution
        run: |
          cd ${{ env.PROJECT_PATH }}/scripts
          ./envsubst.sh "${{ secrets.COURSE_SHEET_URL }}" "${{ secrets.TRIP_SHEET_URL }}"

      # PREPARE
      - name: Install dependencies
        run: |
          cd ${{ env.PROJECT_PATH }}
          # npm install -g @angular/cli
          npm ci

      # # QA
      # - name: Run linting and tests
      #   run: |
      #     cd ${{ env.PROJECT_PATH }}
      #     npm run test

      # BUILD
      - name: Build project
        run: |
          cd ${{ env.PROJECT_PATH }}
          npm run build

      # Copy .htaccess for Apache WebServer
      - name: Copy .htaccess file
        run: |
          cp ${{ env.APACHE_HTACCESS_SCK_APP }} ${{ env.PROJECT_DIST_PATH }}

      # Install sshpass
      - name: Install sshpass
        run: sudo apt-get install -y sshpass

      # Secure copy files to remote server
      - name: SCP files to server
        run: |
          cd "${{ env.PROJECT_DIST_PATH }}"
          sshpass -p "${{ secrets.SSH_PASSWORD }}" \
            scp -v -o "StrictHostKeyChecking=no" -r . \
            "${{ secrets.SSH_USER }}@${{ secrets.SERVER_ADDRESS }}:${{ secrets.SERVER_DIST_PATH_BASE }}"
